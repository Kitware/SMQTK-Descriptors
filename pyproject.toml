[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

###############################################################################
[tool.poetry]
name = "smqtk_descriptors"
# REMEMBER: `distutils.version.*Version` types can be used to compare versions
# from strings like this.
# SMQTK prefers to use the strict numbering standard when possible.
version = "0.19.0"
description = """\
    Algorithms, data structures and utilities around computing\
    descriptor vectors from data."""
license = "BSD-3-Clause"
authors = ["Kitware, Inc. <smqtk-developers@kitware.com>"]
readme = "README.md"
repository = "https://github.com/Kitware/SMQTK-Descriptors"
documentation = "https://smqtk-descriptors.readthedocs.io/"
classifiers = [
        'Development Status :: 3 - Alpha',
        'Intended Audience :: Developers',
        'Intended Audience :: Science/Research',
        'License :: OSI Approved :: BSD License',
        'Operating System :: MacOS :: MacOS X',
        'Operating System :: Unix',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3.9',
        'Programming Language :: Python :: 3.10',
        'Programming Language :: Python :: 3.11',
]

[tool.poetry.dependencies]
python = "^3.8"
numpy = [
    { version = ">=1.26.0", python = "<4.0,>=3.12" },
    { version = ">=1.23.2", python = "<3.12,>=3.11" },
    { version = ">=1.21.6", python = "<3.11,>=3.10" },
    { version = ">=1.19.5", python = "<3.10,>=3.8" },
]
smqtk-core = ">=0.18.0"
smqtk-dataprovider = ">=0.16.0"
smqtk-image-io = [
    { version = ">=0.16.2", python = "<3.11" },
    { version = ">=0.17.0", python=">=3.11"}
]
torch = {version = ">=1.10.0,!=2.0.1", optional = true}
torchvision = {version = ">=0.11.1", optional = true}

[tool.poetry.extras]
pytorch = ["torch", "torchvision"]

[tool.poetry.dev-dependencies]
# CI
flake8 = [
    # Hinge because 6.0 minimum supported python version is 3.8.1
    { version = ">=5", python = "<3.8.1" },
    { version = ">=6", python = ">=3.8.1" }
]
flake8-mutable = ">=1.2.0"
mypy = ">=0.812"
# Docs
# - Also see: `docs/readthedocs-reqs.txt` for use by RTD
Sphinx = ">=3.5.3"
sphinx-rtd-theme = ">=0.5.1"
sphinx-argparse = ">=0.2.5"
sphinx-prompt = ">=1.4.0"
livereload = ">=2.6.3"
# Testing
coverage = ">=5.5"
pytest = ">=6.2.2"
pytest-cov = ">=2.11.1"
# Development
ipython = ">=7.16.3"

[tool.poetry.plugins."smqtk_plugins"]
# DescriptorElement
"smqtk_descriptors.impls.descriptor_element.file" = "smqtk_descriptors.impls.descriptor_element.file"
"smqtk_descriptors.impls.descriptor_element.memory" = "smqtk_descriptors.impls.descriptor_element.memory"
"smqtk_descriptors.impls.descriptor_element.postgres" = "smqtk_descriptors.impls.descriptor_element.postgres"
"smqtk_descriptors.impls.descriptor_element.solr" = "smqtk_descriptors.impls.descriptor_element.solr"
# DescriptorGenerator
"smqtk_descriptors.impls.descriptor_generator.caffe1" = "smqtk_descriptors.impls.descriptor_generator.caffe1"
"smqtk_descriptors.impls.descriptor_generator.pytorch" = "smqtk_descriptors.impls.descriptor_generator.pytorch"
"smqtk_descriptors.impls.descriptor_generator.prepopulated" = "smqtk_descriptors.impls.descriptor_generator.prepopulated"
# DescriptorSet
"smqtk_descriptors.impls.descriptor_set.memory" = "smqtk_descriptors.impls.descriptor_set.memory"
"smqtk_descriptors.impls.descriptor_set.postgres" = "smqtk_descriptors.impls.descriptor_set.postgres"
"smqtk_descriptors.impls.descriptor_set.solr" = "smqtk_descriptors.impls.descriptor_set.solr"

###############################################################################
[tool.pytest.ini_options]
addopts = [
    "-lv",                          # Show local in trace-backs.
    "--doctest-modules",            # Increased verbosity.
    "--tb=long",                    # Trace-back print mode.
    "--cov=./smqtk_descriptors",    # Cover our package specifically
    "--cov=./tests",                # Also cover our tests for dead spots
    "--cov-report=term",            # Coverage report to terminal
    "--cov-report=xml:coverage.xml" # for external tool reporting
]
testpaths = [
    "tests",
    "smqtk_descriptors",
]
norecursedirs = [
    "tests/data"
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]
